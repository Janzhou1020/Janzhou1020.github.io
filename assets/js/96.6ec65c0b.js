(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{546:function(e,o,r){"use strict";r.r(o);var _=r(7),t=Object(_.a)({},(function(){var e=this,o=e._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[e._v("docker ps：列出所有正在运行的容器")]),e._v(" "),o("p",[e._v("docker ps -a：列出所有容器（包括已停止的）")]),e._v(" "),o("p",[e._v("docker inspect <container_id or name>：查看容器的详细信息")]),e._v(" "),o("p",[e._v("docker logs <container_id or name>：查看容器的日志")]),e._v(" "),o("p",[e._v("docker start <container_id or name>：启动一个已停止的容器")]),e._v(" "),o("p",[e._v("docker stop <container_id or name>：停止一个运行中的容器")]),e._v(" "),o("p",[e._v("docker kill <container_id or name>：强制停止一个容器（如果 stop 命令不生效）")]),e._v(" "),o("p",[e._v("docker rm <container_id or name>：删除一个容器（容器必须已停止）")]),e._v(" "),o("p",[e._v("docker container prune：删除所有停止的容器")]),e._v(" "),o("p",[e._v("docker exec -it <container_id or name> /bin/[ bash | sh ]：进入正在运行的容器")]),e._v(" "),o("p",[e._v("docker stats：查看容器的实时资源使用情况")]),e._v(" "),o("p",[e._v("docker restart <container_id or name>：重启一个容器")]),e._v(" "),o("p",[e._v("docker export <container_id or name> -o <path_to_tar_file>：将容器文件系统导出为 tar 文件")]),e._v(" "),o("p",[e._v("docker import <path_to_tar_file>：从tar文件导入容器")]),e._v(" "),o("p",[o("code",[e._v("docker inspect")]),e._v("命令确实可以用来查看容器和镜像的详细信息，尽管它们的输出内容会有所不同")]),e._v(" "),o("p",[o("code",[e._v("docker inspect")]),e._v("的用途包括：")]),e._v(" "),o("ul",[o("li",[o("strong",[e._v("查看容器的详细信息")]),e._v("：包括网络设置、挂载点、环境变量、状态等")]),e._v(" "),o("li",[o("strong",[e._v("查看镜像的详细信息")]),e._v("：包括构建时的配置、标签、创建时间、层等")])])])}),[],!1,null,null,null);o.default=t.exports}}]);