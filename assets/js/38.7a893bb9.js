(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{488:function(t,a,n){"use strict";n.r(a);var s=n(7),p=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("strong",[t._v("问题")]),t._v("：访问 uri 时，出现 404 问题")]),t._v(" "),a("p",[t._v("uri：http://localhost/app")]),t._v(" "),a("p",[t._v("nginx 配置如下")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("location /app {\nroot /var/www/html;\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("在 /var/www/html 存在 index.html，为什么访问会得到 404 呢？其实 location 不仅要对 uri 进行匹配，也要对本地的文件资源进行匹配，匹配的是 /var/www/html/app 文件")]),t._v(" "),a("p",[t._v("所以很显然，下列列表中的 uri 匹配的都是 app 文件夹下的 index.html，而不是通过 /app 去访问根目录下的 index.html")]),t._v(" "),a("ul",[a("li",[t._v("http://localhost/app/")]),t._v(" "),a("li",[t._v("http://localhost/app/index.html")])]),t._v(" "),a("p",[t._v("通过 curl -i http://localhost/app/ 可以正常得到 /var/www/html/app/index.html 这个文件")]),t._v(" "),a("p",[a("strong",[t._v("问题")]),t._v("：使用 nginx ~* 忽略大小写匹配时，访问资源失败 404")]),t._v(" "),a("p",[t._v("目标资源访问 uri：http://localhost/videos/Video9.avi")]),t._v(" "),a("p",[t._v("目标资源：/videos/video9.avi")]),t._v(" "),a("p",[t._v("虽然 ~* 是用来忽略大小写进行匹配的，但是用户访问还是要与实际文件路径一致，这会受到操作系统等因素的影响")]),t._v(" "),a("p",[a("strong",[t._v("问题")]),t._v("：重写路径后，转发的路径不是预期路径")]),t._v(" "),a("p",[t._v("nginx 配置：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("location /api/ {\n    proxy_pass http://backend;\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("请求 uri：/api/test，重写后路径：http://backend/api/test")]),t._v(" "),a("p",[t._v("但是如果 proxy_pass http://backend/，重写路径后："),a("a",{attrs:{href:"http://backend/api/test",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://backend/test"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("这个行为的原因在于 nginx 的 proxy_pass 指令在处理路径时的规则")]),t._v(" "),a("ul",[a("li",[t._v("当 proxy_pass 后的地址"),a("strong",[t._v("不包含尾部的斜杠 /")]),t._v(" 时，nginx 会将 location 块中匹配到的路径部分保留并追加到后端地址，适用于后端服务需要完整路径的情况，例如 API 网关")]),t._v(" "),a("li",[t._v("当 proxy_pass 后的地址"),a("strong",[t._v("包含尾部的斜杠 /")]),t._v(" 时，nginx 会将 location 块中匹配到的路径部分去掉，仅保留剩余的 URI 部分，直接拼接到后端地址，适用于后端服务不需要前缀或希望简化路径的情况")])])])}),[],!1,null,null,null);a.default=p.exports}}]);